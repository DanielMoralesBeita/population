(function(){var gl;var camera;var input;var atlas;var map;var cross;addEventListener("load",main);function main(){gl=webgl(800,600,render,"appendToBody","fullPage","no-antialias","no-alpha");camera=gl.spritecamera([0,0],[0.5,0.5]);input=Input(gl,camera);atlas=gl.atlas("gfx/test1.json",atlasLoad);map=null;cross=gl.spritebatch(camera,true);gl.setClearColor(0,0,0,0);labels=[new Label("A").setColor("#f00").setPos([16,16]),new Label("B").setColor("#0f0").setPos([16,16]),new Label("C").setColor("#00f").setPos([16,16]),new Label("D").setColor("#0ff").setPos([16,16]),new Label("E").setColor("#f0f").setPos([16,16]),new Label("F").setColor("#ff0").setPos([16,16]),];}function atlasLoad(){map=Map(gl,camera);var dim=0;for(var x=-dim;x<=dim;x++){for(var y=-dim;y<=dim;y++){map.addChunk([x,y]);}}map.addChunk([0,1]);map.addChunk([1,0]);map.addChunk([0,-1]);map.addChunk([-1,0]);map.addChunk([-1,-1]);cross.add(gl.sprite(atlas["cross.png"],[0,0],[0.5,0.5]));}function render(){if(map){map.draw();}cross.draw();}var abs=Math.abs;var acos=Math.acos;var cos=Math.cos;var floor=Math.floor;var max=Math.max;var min=Math.min;var pi=Math.PI;var pow=Math.pow;var random=Math.random;var round=Math.round;var sin=Math.sin;var sqrt=Math.sqrt;function mod(x,y){var z=x%y;return z+(z<0)*y;}function frac(x){return x-floor(x);}function radians(d){return d*pi/180;}function degrees(r){return r*180/pi;}function clamp(minval,maxval,val){return max(minval,min(maxval,val));}function noise1d(x,s){x*=15485863;var h=x;h*=s||1;h^=h>>2;h^=h<<5;h^=h>>11;h^=h<<17;h^=h>>23;h^=h<<31;return(h+0x80000000)/0xFFffFFff;}function noise2d(x,y,s){x*=15485863;y*=285058399;var h=x+y;h*=s||1;h^=h>>2;h^=h<<5;h^=h>>11;h^=h<<17;h^=h>>23;h^=h<<31;return(h+0x80000000)/0xFFffFFff;}function linearMix(x,y,a){return x*(1-a)+y*a;}function smoothMix(x,y,a){return x+a*a*(3-2*a)*(y-x);}function vec2(x,y){return new Float32Array([x,y]);}vec2.sqdist=function(a,b){var x=b[0]-a[0];var y=b[1]-a[1];return x*x+y*y;};vec2.vec3=function(v,f){return vec3(v[0],v[1],f);};function vec3(x,y,z){return new Float32Array([x,y,z]);}vec3.rotateX=function(v,a){var cosa=Math.cos(a);var sina=Math.sin(a);return vec3(v[0],v[1]*cosa-v[2]*sina,v[2]*cosa+v[1]*sina,);};vec3.rotateY=function(v,a){var cosa=Math.cos(a);var sina=Math.sin(a);return vec3(v[0]*cosa+v[2]*sina,v[1],v[2]*cosa-v[0]*sina,);};vec3.rotateZ=function(v,a){var cosa=Math.cos(a);var sina=Math.sin(a);return vec3(v[0]*cosa-v[1]*sina,v[1]*cosa+v[0]*sina,v[2],);};var webgl=(function(){var plugins={};webgl.plugins=plugins;webgl.loadText=loadText;function webgl(w,h){var width=w;var height=h;if(Array.isArray(width)){height=width[1];width=width[0];}var setSize=typeof width==="number"&&typeof height==="number";var argc=arguments.length;var toBody=false;var fullPage=false;var renderFunc=undefined;var options={alpha:true,depth:true,stencil:false,antialias:true,premultipliedAlpha:true,preserveDrawingBuffer:false,failIfMajorPerformanceCaveat:false,};for(var i=0;i<argc;i++){var arg=arguments[i];if(typeof arg==="string"){var negate=arg.substr(0,3)==="no-";if(negate){arg=arg.substr(3);}if(options.hasOwnProperty(arg)){options[arg]=!negate;}else if(arg==="appendToBody"){toBody=true;}else if(arg==="fullPage"){fullPage=true;}}else if(typeof arg==="function"){renderFunc=arg;}}var gl=document.createElement("canvas").getContext("webgl",options);gl.ia=gl.getExtension("ANGLE_instanced_arrays");gl.fd=gl.getExtension("EXT_frag_depth");gl.enable(gl.BLEND);gl.blendFunc(gl.SRC_ALPHA,gl.ONE_MINUS_SRC_ALPHA);gl.fullPage=false;gl.renderFunc=undefined;gl.frameLoopStarted=false;gl.lastShader=undefined;gl.sizeBackup=[0,0];gl.resize=resize;gl.enableFullPage=enableFullPage;gl.disableFullPage=disableFullPage;gl.appendTo=appendTo;gl.appendToBody=appendToBody;gl.setClearColor=setClearColor;gl.setRenderFunc=setRenderFunc;gl.useShader=useShader;gl.buffer=buffer;gl.shader=shader;gl.shaderFromUrl=shaderFromUrl;gl.texture=texture;gl.textureFromUrl=textureFromUrl;gl.onWindowResize=function(){gl.resize(innerWidth,innerHeight);};if(setSize){gl.resize(width,height);}else{gl.resize(800,600);}if(toBody){gl.appendToBody();}if(fullPage){gl.enableFullPage();}if(renderFunc){gl.setRenderFunc(renderFunc);}var pluginKeys=Object.getOwnPropertyNames(plugins);for(var i=0;i<pluginKeys.length;i++){var key=pluginKeys[i];gl[key]=plugins[key];}return gl;}function resize(width,height){if(Array.isArray(width)){height=width[1];width=width[0];}this.canvas.width=width;this.canvas.height=height;this.size=[width,height];this.viewport(0,0,width,height);return this;}function enableFullPage(){this.canvas.style.position="absolute";this.canvas.style.top="0";this.canvas.style.left="0";this.sizeBackup=[this.canvas.width,this.canvas.height];addEventListener("resize",this.onWindowResize);this.onWindowResize();return this;}function disableFullPage(){this.canvas.style.position="";this.canvas.style.top="";this.canvas.style.left="";removeEventListener("resize",this.onWindowResize);this.resize(this.sizeBackup);return this;}function appendTo(elm){if(typeof elm==="string"){elm=document.querySelector(elm);}elm.append(this.canvas);return this;}function appendToBody(){this.appendTo(document.body);return this;}function setClearColor(r,g,b,a){if(Array.isArray(r)){g=r[1];b=r[2];a=r[3];r=r[0];}this.clearColor(r,g,b,a);return this;}function setRenderFunc(func){var self=this;this.renderFunc=func;if(this.frameLoopStarted===false){this.frameLoopStarted=true;requestAnimationFrame(frame);}function frame(now){if(self.renderFunc){self.clear(self.COLOR_BUFFER_BIT);self.renderFunc(now);requestAnimationFrame(frame);}else{self.frameLoopStarted=false;}}}function useShader(shader){if(this.lastShader!==shader){this.useProgram(shader);this.lastShader=shader;}}function combineTextFromUrls(urls,srcMap){var res="";for(var i=0;i<urls.length;i++){var url=urls[i];var text=srcMap[url];res+=text;}return res;}function loadText(url,callback){var xhr=new XMLHttpRequest();xhr.open("GET",url);xhr.addEventListener("load",xhrLoad);xhr.send();function xhrLoad(){if(xhr.status===200){callback(xhr.responseText);}}}function buffer(){var buffer=this.createBuffer();var argc=arguments.length;var index=false;var len=0;var data=[];var usages={"static":this.STATIC_DRAW,"dynamic":this.DYNAMIC_DRAW,"stream":this.STREAM_DRAW,};var types={"byte":{arrayType:Int8Array,glType:this.BYTE},"short":{arrayType:Int16Array,glType:this.SHORT},"ubyte":{arrayType:Uint8Array,glType:this.UNSIGNED_BYTE},"ushort":{arrayType:Uint16Array,glType:this.UNSIGNED_SHORT},"float":{arrayType:Float32Array,glType:this.FLOAT},};for(var i=0;i<argc;i++){var arg=arguments[i];if(typeof arg==="string"){if(usages.hasOwnProperty(arg)){buffer.usage=arg;}else if(types.hasOwnProperty(arg)){buffer.type=arg;}else if(arg==="index"){buffer.index=true;}}else if(typeof arg==="number"){len=arg;}else if(Array.isArray(arg)){len=arg.length;data=arg;}}buffer.usage=buffer.usage||"static";buffer.index=buffer.index||false;buffer.type=buffer.type||(buffer.index?"ushort":"float");buffer.arrayType=types[buffer.type].arrayType;buffer.bytesPerElm=buffer.arrayType.BYTES_PER_ELEMENT;buffer.glType=types[buffer.type].glType;buffer.glUsage=usages[buffer.usage];buffer.target=buffer.index?this.ELEMENT_ARRAY_BUFFER:this.ARRAY_BUFFER;buffer.gl=this;buffer.resize=bufferResize;buffer.set=bufferSet;buffer.update=bufferUpdate;buffer.resize(len);buffer.set(0,data);return buffer;}function bufferResize(len){var gl=this.gl;var data=new this.arrayType(len);if(this.data){data.set(this.data.subarray(0,Math.min(this.len,len)));}this.data=data;this.len=len;gl.bindBuffer(this.target,this);gl.bufferData(this.target,this.data,this.glUsage);this.invalidRange=[this.len,0];return this;}function bufferSet(offset,data){data=Array.isArray(data)?data:[data];this.data.set(data,offset);this.invalidRange=[Math.min(this.invalidRange[0],offset),Math.max(this.invalidRange[1],offset+data.length),];return this;}function bufferUpdate(){var gl=this.gl;if(this.invalidRange[0]<this.invalidRange[1]){gl.bindBuffer(this.target,this);gl.bufferSubData(this.target,this.invalidRange[0]*this.arrayType.BYTES_PER_ELEMENT,this.data.subarray(this.invalidRange[0],this.invalidRange[1]));this.invalidRange=[this.len,0];}return this;}var shaderCache={};function createShader(gl){var prog=gl.createProgram();prog.vertShader=gl.createShader(gl.VERTEX_SHADER);prog.fragShader=gl.createShader(gl.FRAGMENT_SHADER);prog.gl=gl;prog.ready=false;prog.attributes={};prog.uniforms={};prog._indices=undefined;prog._mode=undefined;prog._stride=undefined;prog._offset=undefined;prog._count=undefined;prog._divisor=undefined;prog._instances=undefined;prog._buffer=undefined;prog.indices=shaderIndices;prog.mode=shaderMode;prog.stride=shaderStride;prog.offset=shaderOffset;prog.count=shaderCount;prog.divisor=shaderDivisor;prog.instances=shaderInstances;prog.buffer=shaderBuffer;prog.assign=shaderAssign;prog.draw=shaderDraw;return prog;}function shader(vert,frag){var shaderId=null;var prog=createShader(this);var vertElm=null;var fragElm=null;try{if(typeof vert==="string"&&typeof frag==="string"&&document.querySelector(vert)&&document.querySelector(frag)){shaderId=vert+"|"+frag;if(shaderCache[shaderId]){return shaderCache[shaderId];}}vertElm=typeof vert==="string"?document.querySelector(vert):vert;fragElm=typeof frag==="string"?document.querySelector(frag):frag;}catch(e){}vert=vertElm instanceof Node?vertElm.textContent:vert;frag=fragElm instanceof Node?fragElm.textContent:frag;compileShader(prog,vert,frag);shaderCache[shaderId]=prog;return prog;}function shaderFromUrl(vertUrls,fragUrls,readyFunc){vertUrls=Array.isArray(vertUrls)?vertUrls:[vertUrls];fragUrls=Array.isArray(fragUrls)?fragUrls:[fragUrls];var shaderId=vertUrls.join("|")+"|"+fragUrls.join("|");if(shaderCache[shaderId]){if(readyFunc){readyFunc(shaderCache[shaderId]);}return shaderCache[shaderId];}var prog=createShader(this);var vertUrlsToLoad=vertUrls.length;var fragUrlsToLoad=fragUrls.length;var vertSrcs={};var fragSrcs={};var vertSrc=null;var fragSrc=null;for(var i=0;i<vertUrls.length;i++){loadText(vertUrls[i],vertSrcLoad.bind(this,vertUrls[i]));}for(var i=0;i<fragUrls.length;i++){loadText(fragUrls[i],fragSrcLoad.bind(this,fragUrls[i]));}return prog;function vertSrcLoad(url,src){vertSrcs[url]=src;vertUrlsToLoad--;if(vertUrlsToLoad===0){vertSrc=combineTextFromUrls(vertUrls,vertSrcs);if(vertSrc!==null&&fragSrc!==null){compileShader(prog,vertSrc,fragSrc);shaderCache[shaderId]=prog;if(readyFunc){readyFunc(prog);}}}}function fragSrcLoad(url,src){fragSrcs[url]=src;fragUrlsToLoad--;if(fragUrlsToLoad===0){fragSrc=combineTextFromUrls(fragUrls,fragSrcs);if(vertSrc!==null&&fragSrc!==null){compileShader(prog,vertSrc,fragSrc);shaderCache[shaderId]=prog;if(readyFunc){readyFunc(prog);}}}}}function compileShader(prog,vertSrc,fragSrc){var gl=prog.gl;var texCnt=0;gl.shaderSource(prog.vertShader,vertSrc);gl.shaderSource(prog.fragShader,fragSrc);gl.compileShader(prog.vertShader);gl.compileShader(prog.fragShader);if(!gl.getShaderParameter(prog.vertShader,gl.COMPILE_STATUS)){throw("Error: Vertex shader compilation failed: "+gl.getShaderInfoLog(prog.vertShader));}if(!gl.getShaderParameter(prog.fragShader,gl.COMPILE_STATUS)){throw("Error: Fragment shader compilation failed: "+gl.getShaderInfoLog(prog.fragShader));}gl.attachShader(prog,prog.vertShader);gl.attachShader(prog,prog.fragShader);gl.linkProgram(prog);if(!gl.getProgramParameter(prog,gl.LINK_STATUS)){throw("Error: Shader program linking failed: "+gl.getProgramInfoLog(prog));}prog.attributes={};prog.uniforms={};gl.useProgram(prog);var numAttributes=gl.getProgramParameter(prog,gl.ACTIVE_ATTRIBUTES);for(var i=0;i<numAttributes;i++){var info=gl.getActiveAttrib(prog,i);var name=info.name.match(/[a-zA-Z0-9_]+/)[0];prog.attributes[name]={location:gl.getAttribLocation(prog,name),type:info.type,};}var numUniforms=gl.getProgramParameter(prog,gl.ACTIVE_UNIFORMS);for(var i=0;i<numUniforms;i++){var info=gl.getActiveUniform(prog,i);var name=info.name.match(/[a-zA-Z0-9_]+/)[0];prog.uniforms[name]={location:gl.getUniformLocation(prog,name),type:info.type,size:info.size,texUnit:info.type===gl.SAMPLER_2D?texCnt:0,texReady:false,};if(info.type===gl.SAMPLER_2D){texCnt+=info.size;}}prog.ready=true;}function shaderIndices(indices){var gl=this.gl;this._indices=indices;indices.update();gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,indices);return this;}function shaderMode(mode){var gl=this.gl;this._mode=(mode=="points"?gl.POINTS:mode=="linestrip"?gl.LINE_STRIP:mode=="lineloop"?gl.LINE_LOOP:mode=="lines"?gl.LINES:mode=="trianglestrip"?gl.TRIANGLE_STRIP:mode=="trianglefan"?gl.TRIANGLE_FAN:mode=="triangles"?gl.TRIANGLES:this._mode);return this;}function shaderStride(stride){this._stride=stride;return this;};function shaderOffset(offset){this._offset=offset;return this;};function shaderCount(count){this._count=count;return this;};function shaderDivisor(divisor){this._divisor=divisor;return this;}function shaderBuffer(buffer){this._buffer=buffer;return this;}function shaderInstances(instances){this._instances=instances;return this;}function shaderAssign(name,value){if(this.attributes.hasOwnProperty(name)){shaderAssignAttribute.call(this,name,value);}else if(this.uniforms.hasOwnProperty(name)){shaderAssignUniform.call(this,name,value);}return this;}function shaderAssignAttribute(name,value){var gl=this.gl;var attrib=this.attributes[name];var buffer=(value.buffer!==undefined?value.buffer:value instanceof WebGLBuffer?value:this._buffer!==undefined?this._buffer:0);var offset=(value.offset!==undefined?value.offset:this._offset!==undefined?this._offset:0);var stride=(value.stride!==undefined?value.stride:this._stride!==undefined?this._stride:0);var divisor=(value.divisor!==undefined?value.divisor:this._divisor!==undefined?this._divisor:0);if(!attrib){return this;}var type=attrib.type;var location=attrib.location;var components=(type===gl.FLOAT?1:type===gl.FLOAT_VEC2?2:type===gl.FLOAT_VEC3?3:type===gl.FLOAT_VEC4?4:0);if(components===0){throw"Error: Attribute type not supported.";}buffer.update();gl.bindBuffer(buffer.target,buffer);gl.enableVertexAttribArray(location);gl.vertexAttribPointer(location,components,buffer.glType,false,stride,offset);if(gl.ia){gl.ia.vertexAttribDivisorANGLE(location,divisor);}return this;}function shaderAssignUniform(name,value){var gl=this.gl;var uniform=this.uniforms[name];if(!uniform){return false;}var type=uniform.type;var location=uniform.location;var size=uniform.size;gl.useShader(this);if(type===gl.SAMPLER_2D){if(size>1){var texUnits=Array(value.length);for(var i=0;i<value.length;i++){texUnits[i]=uniform.texUnit+i;if(!value[i].ready){uniform.texReady=false;return false;}gl.activeTexture(gl.TEXTURE0+texUnits[i]);gl.bindTexture(gl.TEXTURE_2D,value[i]);}gl.uniform1iv(location,texUnits);uniform.texReady=true;}else{if(!value.ready){uniform.texReady=false;return false;}gl.activeTexture(gl.TEXTURE0+uniform.texUnit);gl.bindTexture(gl.TEXTURE_2D,value);gl.uniform1i(location,uniform.texUnit);uniform.texReady=true;}}else{var func=(type===gl.FLOAT?gl.uniform1f:type===gl.FLOAT_VEC2?gl.uniform2fv:type===gl.FLOAT_VEC3?gl.uniform3fv:type===gl.FLOAT_VEC4?gl.uniform4fv:type===gl.INT||type===gl.BOOL?gl.uniform1i:type===gl.INT_VEC2||type===gl.BOOL_VEC2?gl.uniform2iv:type===gl.INT_VEC3||type===gl.BOOL_VEC3?gl.uniform3iv:type===gl.INT_VEC4||type===gl.BOOL_VEC4?gl.uniform4iv:type===gl.FLOAT_MAT2?gl.uniformMatrix2fv:type===gl.FLOAT_MAT3?gl.uniformMatrix3fv:type===gl.FLOAT_MAT4?gl.uniformMatrix4fv:null);if(func===null){throw"Error: Uniform type not supported.";}if(type===gl.FLOAT_MAT2||type===gl.FLOAT_MAT3||type===gl.FLOAT_MAT4){func.call(gl,location,false,value);}else{func.call(gl,location,value);}}return true;}function shaderDraw(input){input=input||{};if(this.ready===false){return this;}var gl=this.gl;var keys=Object.getOwnPropertyNames(input);for(var i=0;i<keys.length;i++){var key=keys[i];if(key==="indices"){this.indices(input[key]);}else if(key==="mode"){this.mode(input[key]);}else if(key==="stride"){this.stride(input[key]);}else if(key==="offset"){this.offset(input[key]);}else if(key==="count"){this.count(input[key]);}else if(key==="divisor"){this.divisor(input[key]);}else if(key==="instances"){this.instances(input[key]);}else if(key==="buffer"){this.buffer(input[key]);}else{this.assign(key,input[key]);}}var allTexturesReady=true;var uniKeys=Object.getOwnPropertyNames(this.uniforms);for(var i=0;i<uniKeys.length;i++){var uniform=this.uniforms[uniKeys[i]];if(uniform.type===gl.SAMPLER_2D){allTexturesReady=allTexturesReady&&uniform.texReady;}}if(!allTexturesReady){return this;}gl.useShader(this);var mode=this._mode||gl.TRIANGLES;var instances=this._instances||1;if(gl.ia){if(this._indices){gl.ia.drawElementsInstancedANGLE(mode,this._indices.len,this._indices.glType,0,instances);}else{gl.ia.drawArraysInstancedANGLE(mode,0,this._count,instances);}}else{if(this._indices){gl.drawElements(mode,this._indices.len,this._indices.glType,0);}else{gl.drawArrays(mode,0,this._count);}}return this;}var texCache={};function texture(width,height,pixels,filter){if(typeof width==="string"){return this.textureFromUrl(width,height,pixels);}var tex=this.createTexture();this.bindTexture(this.TEXTURE_2D,tex);if(width instanceof HTMLImageElement){var img=width;width=img.width;height=img.height;filter=height||"nearest";filter=filter==="nearest"?this.NEAREST:filter==="linear"?this.LINEAR:0;this.texParameteri(this.TEXTURE_2D,this.TEXTURE_MIN_FILTER,filter);this.texParameteri(this.TEXTURE_2D,this.TEXTURE_MAG_FILTER,filter);this.texImage2D(this.TEXTURE_2D,0,this.RGBA,this.RGBA,this.UNSIGNED_BYTE,img);}else{if(typeof pixels==="string"){filter=pixels;pixels=null;}pixels=pixels||null;filter=filter||"nearest";filter=filter==="nearest"?this.NEAREST:filter==="linear"?this.LINEAR:0;this.texParameteri(this.TEXTURE_2D,this.TEXTURE_MIN_FILTER,filter);this.texParameteri(this.TEXTURE_2D,this.TEXTURE_MAG_FILTER,filter);this.texImage2D(this.TEXTURE_2D,0,this.RGBA,width,height,0,this.RGBA,this.UNSIGNED_BYTE,new Uint8Array(pixels));}tex.size=[width,height];tex.ready=true;tex.img=undefined;return tex;}function textureFromUrl(url,filter,readyFunc){if(typeof filter==="function"){readyFunc=filter;filter=undefined;}var filterName=filter||"nearest";var texid=url+"#"+filterName;if(texCache[texid]){if(readyFunc){readyFunc(texCache[texid]);}return texCache[texid];}filter=(filterName==="nearest"?this.NEAREST:filterName==="linear"?this.LINEAR:0);var tex=this.createTexture();var img=document.createElement("img");img.addEventListener("load",imgLoad.bind(this));img.src=url;tex.size=[0,0];tex.ready=false;tex.img=img;return tex;function imgLoad(){tex.size=[img.width,img.height];tex.ready=true;this.bindTexture(this.TEXTURE_2D,tex);this.texParameteri(this.TEXTURE_2D,this.TEXTURE_MIN_FILTER,filter);this.texParameteri(this.TEXTURE_2D,this.TEXTURE_MAG_FILTER,filter);this.texImage2D(this.TEXTURE_2D,0,this.RGBA,this.RGBA,this.UNSIGNED_BYTE,img);texCache[texid]=tex;if(readyFunc){readyFunc(tex);}}}return webgl;})();(function(){webgl.plugins.sprite=sprite;function sprite(frame,pos,anchor){return new Sprite(frame,pos,anchor);}function Sprite(frame,pos,anchor){this.batch=undefined;this.id=undefined;this.setFrame(frame);this.setPos(pos||[0,0]);this.setAnchor(anchor||[0.5,0.5]);}Sprite.prototype={constructor:Sprite,setFrame:function(frame){this.frame=frame;if(this.batch){this.batch.update(this);}return this;},setPos:function(pos){this.pos=pos;if(this.batch){this.batch.reorder(this);this.batch.update(this);}return this;},setAnchor:function(anchor){this.anchor=anchor;if(this.batch){this.batch.update(this);}return this;},};webgl.plugins.spritecamera=Camera;function Camera(pos,focus,zoom){if(!(this instanceof Camera)){return new Camera(pos,focus,zoom);}this.pos=pos||[0,0];this.focus=focus||[0,0];this.zoom=zoom||1;}Camera.prototype={constructor:Camera,move:function(relX,relY){this.pos[0]+=relX;this.pos[1]+=relY;},};function Frame(texture,framedata){return{texture:texture,name:framedata.name,size:framedata.size,osize:framedata.osize,pos:framedata.pos,pad:framedata.pad,texcoordpos:[framedata.pos[0]/texture.size[0],framedata.pos[1]/texture.size[1]],texcoordsize:[framedata.size[0]/texture.size[0],framedata.size[1]/texture.size[1]],};}var atlasCache={};webgl.plugins.atlas=atlas;webgl.loadJson=loadJson;function atlas(url,readyFunc){var frames={};if(atlasCache[url]){if(readyFunc){readyFunc(frames);}return atlasCache[url];}loadJson(url,jsonLoad.bind(this));return frames;function jsonLoad(json){var tex=this.textureFromUrl(json.texurl,texLoad.bind(this));function texLoad(){for(var i=0;i<json.frames.length;i++){frames[json.frames[i].name]=Frame(tex,json.frames[i]);}if(readyFunc){readyFunc(frames);}}}}function loadJson(url,callback){webgl.loadText(url,textLoad);function textLoad(text){callback(JSON.parse(text));}}webgl.plugins.spritebatch=spritebatch;var spriteStartCapacity=16;var spriteBlockLength=11;var spriteShader=undefined;var spriteShaderVert=["attribute float aVert;","attribute vec2 aPos;","attribute vec2 aSize;","attribute vec2 aAnchor;","attribute vec2 aTexCoordPos;","attribute vec2 aTexCoordSize;","attribute float aTexId;","uniform vec2 uScreenSize;","uniform vec2 uCamPos;","uniform vec2 uCamFocus;","uniform float uZoom;","uniform bool uNoScale;","varying vec2 vTexCoord;","varying float vTexId;","void main() {","vec2 vert = vec2(mod(aVert, 2.0), floor(aVert / 2.0));","vec2 screenPos = (vert - aAnchor) * aSize * (uNoScale ? 1.0 : uZoom) + aPos * uZoom;","screenPos -= uCamPos * uZoom;","screenPos += uScreenSize * uCamFocus;","vec2 clipPos = screenPos * vec2(+2.0, -2.0) / uScreenSize + vec2(-1.0, +1.0);","gl_Position = vec4(clipPos, 0.0, 1.0);","vTexCoord = aTexCoordPos + aTexCoordSize * vert;","vTexId = aTexId;","}",].join("\n");var spriteShaderFrag=["precision highp float;","uniform sampler2D uTextures[8];","varying vec2 vTexCoord;","varying float vTexId;","void main() {","for(float i=0.0; i<8.0; i++) {","if(i == vTexId) {","gl_FragColor = texture2D(uTextures[int(i)], vTexCoord);","}","}","}",].join("\n");function spritebatch(usage,camera,noScale){return new SpriteBatch(this,usage,camera,noScale);}function SpriteBatch(gl,usage,camera,noScale){if(usage instanceof Camera){noScale=camera;camera=usage;usage=undefined;}usage=usage||"static";camera=camera||Camera();noScale=noScale||false;if(!spriteShader){spriteShader=gl.shader(spriteShaderVert,spriteShaderFrag);}this.gl=gl;this.orderFunc=undefined;this.capacity=spriteStartCapacity;this.count=0;this.textures=[];this.camera=camera;this.noScale=noScale;this.vertices=gl.buffer("byte",[0,1,2,3]);this.spritebuf=gl.buffer(usage,"float",this.capacity*spriteBlockLength);this.sprites=Array(spriteStartCapacity);}SpriteBatch.prototype={constructor:SpriteBatch,textureId:function(texture){var id=this.textures.indexOf(texture);if(id===-1){this.textures.push(texture);return this.textures.length-1;}return id;},clear:function(){for(var i=0;i<this.count;i++){this.sprites[i].batch=undefined;}this.count=0;return this;},add:function(sprite){if(sprite.batch===this){return this;}var id=this.count;this.count++;if(this.count>this.capacity){this.capacity*=2;this.spritebuf.resize(this.capacity*spriteBlockLength);}this.sprites[id]=sprite;this.sprites[id].batch=this;this.sprites[id].id=id;this.reorder(sprite);this.update(sprite);return this;},remove:function(sprite){if(sprite.batch!==this){return this;}var id=sprite.id;this.count--;if(this.count>id){sprite=this.sprites[this.count];this.sprites[id]=sprite;this.sprites[id].id=id;this.reorder(sprite);this.update(sprite);this.sprites.splice(this.count,1);}return this;},update:function(sprite){var anchor=[(sprite.anchor[0]*sprite.frame.osize[0]-sprite.frame.pad[0])/sprite.frame.size[0],(sprite.anchor[1]*sprite.frame.osize[1]-sprite.frame.pad[1])/sprite.frame.size[1],];this.spritebuf.set(sprite.id*spriteBlockLength,[sprite.pos[0],sprite.pos[1],sprite.frame.size[0],sprite.frame.size[1],anchor[0],anchor[1],sprite.frame.texcoordpos[0],sprite.frame.texcoordpos[1],sprite.frame.texcoordsize[0],sprite.frame.texcoordsize[1],this.textureId(sprite.frame.texture),]);return this;},reorder:function(sprite){if(this.orderFunc){while(sprite.id<this.count-1&&this.orderFunc(sprite,this.sprites[sprite.id+1])>0){var tmp=this.sprites[sprite.id+1];this.sprites[sprite.id+1]=sprite;this.sprites[sprite.id]=tmp;sprite.id++;tmp.id--;this.update(sprite);this.update(tmp);}while(sprite.id>0&&this.orderFunc(sprite,this.sprites[sprite.id-1])<0){var tmp=this.sprites[sprite.id-1];this.sprites[sprite.id-1]=sprite;this.sprites[sprite.id]=tmp;sprite.id--;tmp.id++;this.update(sprite);this.update(tmp);}}return this;},draw:function(){if(this.count===0){return this;}spriteShader.draw({mode:"trianglestrip",count:4,instances:this.count,stride:4*spriteBlockLength,divisor:1,buffer:this.spritebuf,uScreenSize:this.gl.size,uCamPos:this.camera.pos,uCamFocus:this.camera.focus,uZoom:this.camera.zoom,uNoScale:this.noScale,uTextures:this.textures,aVert:{buffer:this.vertices,stride:0,divisor:0},aPos:{offset:0*4},aSize:{offset:2*4},aAnchor:{offset:4*4},aTexCoordPos:{offset:6*4},aTexCoordSize:{offset:8*4},aTexId:{offset:10*4},});return this;},};})();log=console.log;function noop(){}function basename(path){return path.split("/").slice(-1)[0]}function stripext(path){return path.split(".").slice(0,-1).join(".")}function getext(filename){return filename.split(".").pop();}function elmById(id){return document.getElementById(id);}function elmByTag(tag){return document.getElementsByTagName(tag)[0];}function newElm(tag){return document.createElement(tag);}function loadScript(url,callback,errorcb){var script=newElm("script");callback=callback||noop;errorcb=errorcb||noop;script.src=url;script.addEventListener("load",callback);script.addEventListener("error",errorcb);document.head.appendChild(script);}function subclass(newclass,baseclass){newclass.prototype=Object.create(baseclass.prototype,{constructor:newclass});}function Dyn2dArray(){if(!(this instanceof Dyn2dArray)){return new Dyn2dArray();}this.left=0;this.top=0;this.right=0;this.bottom=0;this.width=0;this.height=0;this.rows=[];this.cellFactory=function(){return undefined;};}Dyn2dArray.prototype={constructor:Dyn2dArray,get:function(p){var x=p[0];var y=p[1];this.expandTo(p);return(this.rows[y-this.top][x-this.left]||(this.rows[y-this.top][x-this.left]=this.cellFactory(p)));},set:function(p,value){var x=p[0];var y=p[1];this.expandTo(p);this.rows[y-this.top][x-this.left]=value;},each:function(callback){for(var y=0;y<this.rows.length;y++){var rows=this.rows[y];for(var x=0;x<rows.length;x++){var cell=rows[x];if(cell!==undefined){callback(cell,x,y);}}}},expandTo:function(p){var x=p[0];var y=p[1];if(x<this.left){this.expandLeft(x);}else if(x>=this.right){this.expandRight(x+1);}if(y<this.top){this.expandTop(y);}else if(y>=this.bottom){this.expandBottom(y+1);}},expandLeft:function(left){var add=this.left-left;if(add<=0)return;for(var i=0;i<this.rows.length;i++){this.rows[i]=Array(add).concat(this.rows[i]);}this.left=left;this.width+=add;},expandRight:function(right){var add=right-this.right;if(add<=0)return;for(var i=0;i<this.rows.length;i++){this.rows[i]=this.rows[i].concat(Array(add));}this.right=right;this.width+=add;},expandTop:function(top){var add=this.top-top;if(add<=0)return;this.rows=Array(add).concat(this.rows);for(var i=0;i<add;i++){this.rows[i]=Array(this.width);}this.top=top;this.height+=add;},expandBottom:function(bottom){var add=bottom-this.bottom;if(add<=0)return;this.rows=this.rows.concat(Array(add));for(var i=0;i<add;i++){this.rows[this.height+i]=Array(this.width);}this.bottom=bottom;this.height+=add;},};function Layer(seed,zoom,amp){this.seed=seed;this.zoom=zoom;this.amp=amp;this.samples=new Dyn2dArray();this.samples.cellFactory=this.cellFactory.bind(this);}Layer.prototype={constructor:Layer,sample:function(p){var x=p[0];var y=p[1];var zx=x/this.zoom;var zy=y/this.zoom;var flx=floor(zx);var fly=floor(zy);var p=zx-flx;var q=zy-fly;var aa=this.samples.get([flx,fly]);var ba=this.samples.get([flx+1,fly]);var ab=this.samples.get([flx,fly+1]);var bb=this.samples.get([flx+1,fly+1]);var mixFunc=smoothMix;return this.amp*mixFunc(mixFunc(aa,ba,p),mixFunc(ab,bb,p),q);},cellFactory:function(p){return noise2d(p[0],p[1],this.seed);},};function Perlin(){this.layers=[new Layer(0,1,1),new Layer(1,2,2),new Layer(2,4,4),new Layer(3,8,8),];}Perlin.prototype={constructor:Perlin,sample:function(p){var sum=0;var ampsum=0;for(var i=0;i<this.layers.length;i++){sum+=this.layers[i].sample(p);ampsum+=this.layers[i].amp}return sum/ampsum;},};function Emitter(){this.events={};}Emitter.prototype={hasListeners:function(event){if(event!==undefined){var listeners=this.events[event]=this.events[event]||[];return listeners.length>0;}else{for(var event in this.events){if(this.events.hasOwnProperty(event)&&this.events[event].length>0){return true;}return false;}}},register:function(event,listener){var listeners=this.events[event]=this.events[event]||[];var index=listeners.indexOf(listener);if(index===-1){listeners.push(listener);}return this;},unregister:function(event,listener){if(event!==undefined){if(listener!==undefined){var listeners=this.events[event]=this.events[event]||[];var index=listeners.indexOf(listener);if(index!==-1){listeners.splice(index,1);}return this;}else{this.events[event]=[];}}else{this.events={};}return this;},trigger:function(event,data){var listeners=this.events[event]=this.events[event]||[];var data=data||[];for(var i=0;i<listeners.length;i++){listeners[i](data,this);}return this;},};function Mouse(eventTarget){this.onMouseEvent=this.onMouseEvent.bind(this);this.onWheelEvent=this.onWheelEvent.bind(this);Emitter.call(this);this.eventTarget=eventTarget;this.eventTarget.addEventListener("mousedown",this.onMouseEvent);this.eventTarget.addEventListener("mouseup",this.onMouseEvent);this.eventTarget.addEventListener("mousemove",this.onMouseEvent);this.eventTarget.addEventListener("dblclick",this.onMouseEvent);this.eventTarget.addEventListener("wheel",this.onWheelEvent);}Mouse.prototype=Object.create(Emitter.prototype);(function(){this.onMouseEvent=function(e){var id=e.type;if(this.hasListeners(id)){var clientRect=this.eventTarget.getBoundingClientRect();var eventData={x:e.clientX-clientRect.left,y:e.clientY-clientRect.top,primaryButton:e.buttons&1>0,secondaryButton:e.buttons&2>0,auxilaryButton:e.buttons&4>0,ctrl:e.ctrlKey,alt:e.altKey,shift:e.shiftKey,meta:e.metaKey};this.trigger(id,eventData);e.preventDefault();if(eventData.primaryButton){this.eventTarget.focus();}}};this.onWheelEvent=function(e){if(e.deltaY>0){this.trigger("wheeldown");}else if(e.deltaY<0){this.trigger("wheelup");}};}).call(Mouse.prototype);function Keyboard(eventTarget){this.onKeyDown=this.onKeyDown.bind(this);Emitter.call(this);this.eventTarget=eventTarget;this.eventTarget.setAttribute("tabindex","-1");this.eventTarget.addEventListener("keydown",this.onKeyDown);}Keyboard.prototype=Object.create(Emitter.prototype);(function(){this.onKeyDown=function(e){var id="";if(e.ctrlKey&&e.key!=="Control"){id+="C-";}if(e.altKey&&e.key!=="Alt"){id+="A-";}if(e.shiftKey&&e.key!=="Shift"&&e.key.length>1){id+="S-";}if(e.metaKey&&e.key!=="Meta"){id+="M-";}if(e.key.length===1&&id.length===0){id+="Char";}else if(e.key===" "){id+="Space";}else{id+=e.key;}if(this.hasListeners(id)){this.trigger(id,{key:e.key,ctrl:e.ctrlKey,alt:e.altKey,shift:e.shiftKey,meta:e.metaKey});e.preventDefault();}};}).call(Keyboard.prototype);var triaHeight=sqrt(3)/2;var viewAngle=acos(1/sqrt(3));var viewAngleSin=sqrt(2/3);var viewAngleCos=1/sqrt(3);var heightScale=1/3;var stdDefZoom=32;var sqrt6=sqrt(6);var dsqrt3=2*sqrt(3);var sqrt2h=sqrt(2)/2;var sun=vec3(0,0,-1);sun=vec3.rotateX(sun,radians(-45));sun=vec3.rotateZ(sun,radians(30));var chunkSize=32;var chunkWidth=chunkSize;var chunkHeight=chunkSize*2;var chunkVerts=chunkWidth*chunkHeight;var numVertsPerRow=chunkWidth+1;var numVertRows=chunkHeight+1;var numVerts=numVertRows*numVertsPerRow;var numTriasPerRow=chunkSize*2;var numTriaRows=chunkSize*2;var numTrias=numTriaRows*numTriasPerRow;var numIndices=(numTriasPerRow+2+2)*numTriaRows-2;function leftFrom(p){return[p[0]-1,p[1]];}function rightFrom(p){return[p[0]+1,p[1]];}function upFrom(p){return[p[0],p[1]-1];}function downFrom(p){return[p[0],p[1]+1];}function leftUpFromCartes(p){return[p[0]-1,p[1]-1,];}function leftUpFrom(p){return[p[0]-1+mod(p[1],2),p[1]-1,];}function rightUpFrom(p){return[p[0]+mod(p[1],2),p[1]-1,];}function leftDownFrom(p){return[p[0]-1+mod(p[1],2),p[1]+1,];}function rightDownFrom(p){return[p[0]+mod(p[1],2),p[1]+1,];}function allAdjacent(p){return[leftFrom(p),rightFrom(p),leftUpFrom(p),rightUpFrom(p),leftDownFrom(p),rightDownFrom(p),];}function hexRing(pivot,size){if(size===0){return[pivot];}var set=[];var left=pivot;var leftup=pivot;var rightup=pivot;var right=pivot;var rightdown=pivot;var leftdown=pivot;for(var i=0;i<size;i++){left=leftFrom(left);leftup=leftUpFrom(leftup);rightup=rightUpFrom(rightup);right=rightFrom(right);rightdown=rightDownFrom(rightdown);leftdown=leftDownFrom(leftdown);}for(var i=0;i<size;i++){set.push(left);set.push(leftup);set.push(rightup);set.push(right);set.push(rightdown);set.push(leftdown);left=rightUpFrom(left);leftup=rightFrom(leftup);rightup=rightDownFrom(rightup);right=leftDownFrom(right);rightdown=leftFrom(rightdown);leftdown=leftUpFrom(leftdown);}return set;}function linearLocalCoord(p){return p[0]+p[1]*numVertsPerRow;}function chunkCoord(p){return[floor(p[0]/chunkWidth),floor(p[1]/chunkHeight),];}function localCoord(p){return[mod(p[0],chunkWidth),mod(p[1],chunkHeight),];}function globalCoord(cp,lp){return[cp[0]*chunkWidth+lp[0],cp[1]*chunkHeight+lp[1],];}function mapToWorld(p){return[p[0]+(mod(floor(p[1]),2)===0?frac(p[1])*0.5:0.5-frac(p[1])*0.5),p[1]*triaHeight,p[2]*heightScale,];}function worldToScreen(p){var pyr=p[1]*viewAngleCos-p[2]*viewAngleSin;return[gl.size[0]/2.0+camera.zoom*(stdDefZoom*p[0]-camera.pos[0]),gl.size[1]/2.0+camera.zoom*(stdDefZoom*pyr-camera.pos[1]),];}function worldToSpriteSpace(p){var pyr=p[1]*viewAngleCos-p[2]*viewAngleSin;return[stdDefZoom*p[0],stdDefZoom*pyr,];}function mapToScreen(p){return worldToScreen(mapToWorld(p));}function pickMapCoord(p){var y=((p[1]-gl.size[1]/2)/camera.zoom+camera.pos[1])/stdDefZoom*2;var fy=floor(y);var x=((p[0]-gl.size[0]/2)/camera.zoom+camera.pos[0])/stdDefZoom-mod(fy,2)/2;var fx=round(x);var before=x<fx;var oddstart=mod(fy,2);var bestDist=undefined;var bestMapCoord=undefined;for(var i=0;i<256;i++){var oddrow=mod(fy+i,2);var xshift=1*oddstart*!oddrow*!before-1*!oddstart*oddrow*before;var mapCoord2d=[fx+xshift,fy+i,0];var mapCoord3d=[mapCoord2d[0],mapCoord2d[1],map?map.getHeight(mapCoord2d):0];var screenPos=mapToScreen(mapCoord3d);var dist=vec2.sqdist(p,screenPos);if(bestDist!==undefined&&dist>bestDist){break;}bestDist=dist;bestMapCoord=mapCoord3d;}return bestMapCoord;}mapgen={perlin:new Perlin(),height:function(p){return 0;},terra:function(p){return floor(this.perlin.sample(p)*3);},};function Obj(map,pos){this.map=map;this.direction="";this.offset=0;this.sprite=gl.sprite(atlas["tree.png"],[0,0],[0.5,0.875]);this.setPos(pos||[0,0]);}Obj.prototype={constructor:Obj,setPos:function(pos){if(this.pos){var cp=chunkCoord(this.pos);var lp=localCoord(this.pos);var chunk=this.map.chunks.get(cp);var i=linearLocalCoord(lp);chunk.objs[i]=undefined;}var cp=chunkCoord(pos);var lp=localCoord(pos);var chunk=this.map.chunks.get(cp);var i=linearLocalCoord(lp);chunk.objs[i]=this;this.pos=pos;this.updateSpritePos();return this;},updateSpritePos:function(){this.sprite.setPos(this.map.getObjSpritePos(this.pos));},};function Chunk(map,pos){this.map=map;this.pos=pos;this.heights=gl.buffer("ubyte",numVerts);this.terra=gl.buffer("ubyte",numVerts);this.coefs=gl.buffer(numVerts);this.objs=Array(chunkVerts);}(function(){this.init=function(){for(var y=0;y<numVertRows;y++){for(var x=0;x<numVertsPerRow;x++){var p=globalCoord(this.pos,[x,y]);var h=map.gen.height(p);var t=map.gen.terra(p);var i=linearLocalCoord([x,y]);this.heights.set(i,h);this.terra.set(i,t);if(x===numVertsPerRow-1||y===numVertRows-1){map.setHeight(p,h);map.setTerra(p,t);}}}for(var y=0;y<chunkHeight;y++){for(var x=0;x<chunkWidth;x++){if(random()<0.009925){new Obj(this.map,globalCoord(this.pos,[x,y]));}}}};this.drawTerra=function(){var shader=this.map.shader;shader.draw({uChunkCoord:this.pos,aHeight:this.heights,aCoef:this.coefs,aTerra:this.terra,});};this.updateNormal=function(lp){var i=linearLocalCoord(lp);var p=globalCoord(this.pos,lp);var v=map.getVertex(p);var Az=map.getHeight(leftFrom(p))*heightScale;var Bz=map.getHeight(leftUpFrom(p))*heightScale;var Cz=map.getHeight(rightUpFrom(p))*heightScale;var Dz=map.getHeight(rightFrom(p))*heightScale;var Ez=map.getHeight(rightDownFrom(p))*heightScale;var Fz=map.getHeight(leftDownFrom(p))*heightScale;var CzFz=Cz-Fz;var BzEz=Bz-Ez;var AzDz=Az-Dz;var sqt1=BzEz+CzFz;var sqt2=2*AzDz+BzEz-CzFz;var c=sqrt2h*(2*CzFz+BzEz-AzDz+6)/sqrt(3*sqt1*sqt1+sqt2*sqt2+36);this.coefs.set(i,c*c*1.5);};this.updateNormals=function(){var map=this.map;for(var y=0;y<numVertRows;y++){for(var x=0;x<numVertsPerRow;x++){this.updateNormal([x,y]);}}};this.updateNormalsLeftEdge=function(){var map=this.map;for(var y=0;y<numVertRows;y++){this.updateNormal([0,y]);}};this.updateNormalsTopEdge=function(){var map=this.map;for(var x=0;x<numVertsPerRow;x++){this.updateNormal([x,0]);}};this.updateNormalsRightEdge=function(){var map=this.map;for(var y=0;y<numVertRows;y++){this.updateNormal([numVertsPerRow-1,y]);this.updateNormal([numVertsPerRow-2,y]);}};this.updateNormalsBottomEdge=function(){var map=this.map;for(var x=0;x<numVertsPerRow;x++){this.updateNormal([x,numVertRows-1]);this.updateNormal([x,numVertRows-2]);}};}).call(Chunk.prototype);function Map(gl,camera){if(!(this instanceof Map)){return new Map(gl,camera);}this.gl=gl;this.camera=camera;this.gen=mapgen;this.chunks=Dyn2dArray();this.mapCoords=gl.buffer("ubyte",numVerts*2);this.indices=gl.buffer("index",numIndices);this.terraTex=gl.texture("gfx/terrain.png");this.batch=gl.spritebatch("stream",camera);this.shader=gl.shaderFromUrl(["shaders/utils.glslv","shaders/map.glslv"],["shaders/map.glslf"],);for(var y=0;y<numVertRows;y++){for(var x=0;x<numVertsPerRow;x++){this.mapCoords.set(linearLocalCoord([x,y])*2,[x,y]);}}for(var y=0,i=0;y<numTriaRows;y++){var evenRow=y%2===0;var oddRow=!evenRow;for(var x=0;x<numTriasPerRow;x++){var isDownPointing=evenRow&&x%2==0||oddRow&&x%2==1;var isUpPointing=!isDownPointing;this.indices.set(i++,(y+isUpPointing)*numVertsPerRow+floor(x/2));if(x==0&&y>0){this.indices.set(i++,this.indices.data[i-2]);}}this.indices.set(i++,(y+1+oddRow)*numVertsPerRow-1);this.indices.set(i++,(y+1+evenRow)*numVertsPerRow-1);if(y<numTriaRows-1){this.indices.set(i++,this.indices.data[i-2]);}}}Map.prototype={constructor:Map,updateNormal:function(p){var cp=chunkCoord(p);var lp=localCoord(p);var chunk=this.getChunk(cp);if(chunk!==undefined){chunk.updateNormal(lp);if(lp[0]===0){chunk=this.getChunk([cp[0]-1,cp[1]]);if(chunk!==undefined){chunk.updateNormal([numVertsPerRow-1,lp[1]]);}}if(lp[1]===0){chunk=this.getChunk([cp[0],cp[1]-1]);if(chunk!==undefined){chunk.updateNormal([lp[0],numVertRows-1]);}}if(lp[0]===0&&lp[1]===0){chunk=this.getChunk([cp[0]-1,cp[1]-1]);if(chunk!==undefined){chunk.updateNormal([numVertsPerRow-1,numVertRows-1]);}}}},getHeight:function(p){var cp=chunkCoord(p);var lp=localCoord(p);var chunk=this.getChunk(cp);var i=linearLocalCoord(lp);if(chunk===undefined){if(lp[0]===0){cp[0]--;chunk=this.getChunk(cp);lp[0]=numVertsPerRow-1;i=linearLocalCoord(lp);}else if(lp[1]===0){cp[1]--;chunk=this.getChunk(cp);lp[1]=numVertRows-1;i=linearLocalCoord(lp);}}return chunk!==undefined?chunk.heights.data[i]:0;},setHeight:function(p,h){var cp=chunkCoord(p);var lp=localCoord(p);var chunk=this.getChunk(cp);var i=linearLocalCoord(lp);if(chunk===undefined){return false;}chunk.heights.set(i,h);if(chunk.objs[i]){chunk.objs[i].updateSpritePos();}if(lp[0]===0){chunk=this.getChunk(leftFrom(cp));i=linearLocalCoord([numVertsPerRow-1,lp[1]]);if(chunk!==undefined){chunk.heights.set(i,h);}}if(lp[1]===0){chunk=this.getChunk(upFrom(cp));i=linearLocalCoord([lp[0],numVertRows-1]);if(chunk!==undefined){chunk.heights.set(i,h);}}if(lp[0]===0&&lp[1]===0){chunk=this.getChunk(leftUpFromCartes(cp));i=linearLocalCoord([numVertsPerRow-1,numVertRows-1]);if(chunk!==undefined){chunk.heights.set(i,h);}}this.updateNormal(p);this.updateNormal(leftFrom(p));this.updateNormal(rightFrom(p));this.updateNormal(leftUpFrom(p));this.updateNormal(rightUpFrom(p));this.updateNormal(leftDownFrom(p));this.updateNormal(rightDownFrom(p));return true;},liftOrSinkHeightTest:function(p,sink){var ringsize=0;var targheight=this.getHeight(p)+(sink?-1:1);var changed=true;while(changed){var adj=hexRing(p,ringsize++);changed=false;for(var i=0;i<adj.length;i++){var phere=adj[i];var hereHeight=this.getHeight(phere);if(sink?hereHeight>targheight:hereHeight<targheight){var cp=chunkCoord(phere);var chunk=this.getChunk(cp);if(chunk===undefined){return false;}changed=true;}}if(targheight<0||targheight>255){return false;}sink?targheight++:targheight--;}return true;},liftOrSinkHeight:function(p,sink){if(this.liftOrSinkHeightTest(p,sink)===false){return false;}var h=this.getHeight(p);var adj=allAdjacent(p);var ok=this.setHeight(p,sink?--h:++h);if(!ok){return false;}for(var i=0;i<adj.length;i++){var pa=adj[i];var ah=this.getHeight(pa);if(sink?(h<ah-1):(h>ah+1)){var ok=this.liftOrSinkHeight(pa,sink);}}return true;},getTerra:function(p){var cp=chunkCoord(p);var lp=localCoord(p);var chunk=this.getChunk(cp);var i=linearLocalCoord(lp);return chunk!==undefined?chunk.terra.data[i]:0;},setTerra:function(p,t){var cp=chunkCoord(p);var lp=localCoord(p);var chunk=this.getChunk(cp);var i=linearLocalCoord(lp);if(chunk!==undefined){chunk.terra.set(i,t);if(lp[0]===0){chunk=this.getChunk([cp[0]-1,cp[1]]);i=linearLocalCoord([numVertsPerRow-1,lp[1]]);if(chunk!==undefined){chunk.terra.set(i,t);}}if(lp[1]===0){chunk=this.getChunk([cp[0],cp[1]-1]);i=linearLocalCoord([lp[0],numVertRows-1]);if(chunk!==undefined){chunk.terra.set(i,t);}}if(lp[0]===0&&lp[1]===0){chunk=this.getChunk([cp[0]-1,cp[1]-1]);i=linearLocalCoord([numVertsPerRow-1,numVertRows-1]);if(chunk!==undefined){chunk.terra.set(i,t);}}}},getObj:function(p){var cp=chunkCoord(p);var lp=localCoord(p);var chunk=this.chunks.get(cp);var i=linearLocalCoord(lp);if(chunk===undefined){return undefined;}return chunk.objs[i];},getVertex:function(p){return mapToWorld(vec2.vec3(p,this.getHeight(p)));},getScreenVertex:function(p){return worldToScreen(this.getVertex(p));},getObjSpritePos:function(p){return worldToSpriteSpace(this.getVertex(p));},getChunk:function(p){return this.chunks.get(p);},setChunk:function(p,chunk){this.chunks.set(p,chunk);},addChunk:function(p){if(this.getChunk(p)===undefined){var chunk=new Chunk(this,p);this.setChunk(p,chunk);chunk.init();chunk.updateNormals();var f=this.getChunk([p[0]-1,p[1]]);if(f)f.updateNormalsRightEdge();var f=this.getChunk([p[0],p[1]-1]);if(f)f.updateNormalsBottomEdge();var f=this.getChunk([p[0]+1,p[1]]);if(f)f.updateNormalsLeftEdge();var f=this.getChunk([p[0],p[1]+1]);if(f)f.updateNormalsTopEdge();var f=this.getChunk([p[0]+1,p[1]+1]);if(f)f.updateNormal([0,0]);}},draw:function(){this.shader.mode("trianglestrip").indices(this.indices).assign("uChunkSize",chunkSize).assign("uScreenSize",gl.size).assign("uStdDefZoom",stdDefZoom).assign("uZoom",this.camera.zoom).assign("uCameraPos",this.camera.pos).assign("uSun",sun).assign("uTex",this.terraTex).assign("aMapCoord",this.mapCoords);this.chunks.each(function(chunk,x,y){chunk.drawTerra();});this.batch.clear();var leftTop=pickMapCoord([0,0]);var rightBottom=pickMapCoord(gl.size);for(var y=leftTop[1];y<rightBottom[1];y++){for(var x=leftTop[0];x<rightBottom[0];x++){var obj=this.getObj([x,y]);if(obj){this.batch.add(obj.sprite);}}}this.batch.draw();},};function Label(text,p){this.div=newElm("div");this.div.style.position="absolute";document.body.appendChild(this.div);this.setPos(p||[0,0]);this.setText(text||"New Label");}Label.prototype={constructor:Label,setText:function(text){this.text=text;this.div.innerHTML=text;return this;},setFont:function(font){this.div.style.fontFamily=font;return this;},setColor:function(color){this.div.style.color=color;return this;},setPos:function(p){this.pos=p;this.div.style.left=p[0]+"px";this.div.style.top=p[1]+"px";return this;},};function Input(gl,camera){if(!(this instanceof Input)){return new Input(gl,camera);}this.gl=gl;this.elm=gl.canvas;this.moving=false;this.mouse=[0,0];this.mouseRel=[0,0];this.elm.addEventListener("mousemove",this.onMouseMove.bind(this));this.elm.addEventListener("mousedown",this.onMouseDown.bind(this));this.elm.addEventListener("mouseup",this.onMouseUp.bind(this));this.elm.addEventListener("wheel",this.onMouseWheel.bind(this));window.addEventListener("contextmenu",function(e){e.preventDefault();});}Input.prototype={constructor:Input,updateMouse:function(e){var rect=this.elm.getBoundingClientRect();this.mouseRel=[e.movementX,e.movementY];this.mouse=[e.clientX-rect.left,e.clientY-rect.top];},onMouseMove:function(e){var gl=this.gl;this.updateMouse(e);if(this.moving){camera.move(this.mouseRel[0]/camera.zoom,this.mouseRel[1]/camera.zoom,);}var p=pickMapCoord(this.mouse);cross.sprites[0].setPos(map.getObjSpritePos(p));var screenCoord=mapToScreen(p);},onMouseDown:function(e){this.updateMouse(e);if(e.button===2){this.moving=true;this.gl.canvas.requestPointerLock();e.preventDefault();e.stopPropagation();}else if(e.button===0){var p=pickMapCoord(this.mouse);map.liftOrSinkHeight(p,false);}},onMouseUp:function(e){this.updateMouse(e);if(this.moving){this.moving=false;document.exitPointerLock();}},onMouseWheel:function(e){this.updateMouse(e);if(e.deltaY>0){this.onMouseWheelDown();}else{this.onMouseWheelUp();}},onMouseWheelDown:function(){camera.zoom/=1.25;},onMouseWheelUp:function(){camera.zoom*=1.25;},};})();
